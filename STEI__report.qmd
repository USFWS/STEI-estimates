---
title: "Steller's eider estimates from the Arctic Coastal Plain and ABR Triangle surveys"
author:
  name: Erik E. Osnas
  orcid: 0000-0001-9528-0866
  email: erik_osnas@fws.gov
  affiliation: 
    name: Division of Migratory Bird Management
    department: US Fish and Wildlife Service
    city: Anchorage
    state: AK
date: "`r Sys.Date()`"
bibliography: bibliography.bib
format:
  pdf: default
  elsevier-pdf:
    keep-tex: true 
execute: 
  echo: false
  warning: false
abstract: |
  blah, blab, blah
---

## Summary

## Methods

### Survey areas and data source

Data used in this report came from the Arctic Coastal Plain Survey (hereafter, ACP) and a survey conducted by ABR, Inc. (ABR) near UtqiaÄ¡vik, Alaska (hereafter, the Triangle survey, @fig-area). The ACP survey has been described in Amundson et al. [-@amundson2019], but here data from 2007 to 2019 and 2022 to 2024 is used. The timing of the survey differed before 2007, which causes a difference in observed response (the subject of the effort in @amundson2019). In addition the data before 2007 have not undergone the same level of quality control and have not been made publicly available. The data from 2007 to 2024, a description of quality control processes, and data manipulations are available at @osnasACP and @osnas-github. 

The Triangle survey is described in unpublished reports from ABR [@triangleABR]. Data for the Triangle survey are not publicly available at this time, but were obtained from ABR. A lengthy quality control process was applied to make data available for use in this report (documented in the file `wrangle_ABR.R`, available from the author). Source data for this analysis is available from the author. 

Important differences between the surveys include much higher sampling coverage of the Triangle survey (25-50%) compared to the ACP survey (approximately 1 - 8%), the much larger area of the ACP survey, and sampling effort is stratified in the ACP survey [@fig-area]. 

```{r}
#| label: fig-area
#| fig-cap: "Arctic Coastal Plain (ACP) and Triangle survey areas. East-West transect lines are shown in red for the Triangle survey and in black for the one year on the ACP. Strata with different sampling intensity for the ACP are shown in thicker black lines and different fill colors. The Triangle area transect appear as a solid red polygon inside the ACP High stratum at this scale because transects are only 800m apart. On the ACP, transects are rotated north-south over a four year period to increase spatial coverage (not shown)."
library(tidyverse)
library(sf)
path = "../ACP-Mapping/Data/ACP_2023/analysis_output/ACP_DesignStrata_QC.gpkg"
acp <- st_read(dsn = path, quiet = TRUE) #|> st_union()
acp$Stratum[5] <- "Teshekpuk"
path = "../ACP-Mapping/Data/ACP_2023/analysis_output/ACP_DesignTrans_QC_2024-11-12.gpkg"
trans.acp <- st_read(dsn = path, quiet = TRUE) |> 
  filter(Year %in% 2007)
trans <- st_read(dsn = "data/Barrow_STEI_standardized_transects_Aug2024.gpx", 
                 layer = "routes", quiet = TRUE) |>
  select(Transect = name) |>
  filter(str_sub(Transect, 1, 1) == "A", row_number() > 10)
triangle <- st_read(dsn = "data/Barrow_Triangle_STEI_Aerial_SA", quiet = TRUE)
ggplot(data = acp) + geom_sf(aes(fill = Stratum), lwd = 1) + geom_sf(data = trans[c(TRUE, FALSE),], col = "red") + geom_sf(data = trans.acp)
```

### Design-based estimates

I calculated a design-based estimate using formula "R3" of Fewster et al. [-@fewster2009, also see @buckland2001, p. 79], modified for strip transects. A ratio estimator, which is more common for strip-transect surveys [@r-akaerial], was investigated but found to be poor due to the distribution of observations and the triangle shape of the survey area, where most observations are on short transects in the north and longer transects in the south rarely have observed animals. This nullifies any advantage of a ratio estimator, which can produce a better estimate when the transect length and number of encounters are positively related [@thompson2012]. The point estimate was calculated as 

$$\hat N = A \frac{\Sigma_i n_i}{\Sigma_i a_i}$$
and the variance of $\hat N$ was calculated as 

$$var(\hat N) = \left( \frac{A}{a} \right)^2 \frac{a}{k-1} \sum_i a_i\left( \frac{n_i}{a_i} - \frac{n}{a} \right)^2$$
where $A$ is the total area of the study area, $a_i$ is the area of strip transect $i$, $n_i$ is the number of encountered single males or pairs on strip transect $i$, and $n$ is the total encounters on the $k$ surveyed strips, and $a$ is the total area of the $k$ surveyed strips. It is arguable if a finite population correction, $(1 - a/A)$, is appropriate, and I have left it out as it is not used by Fewster et al.  [-@fewster2009] or Buckland et al. [-@buckland2001] because observations on transects are not likely repeatable due to movement of birds and the detection process. Fewster et al. showed that the above overestimates the variance of systematic surveys when there is a strong gradient in density, as there is in this area. Instead, they suggested a different estimator for systematic survey ("O2" of Fewster et al.), which I have not implemented at this time. In any case, the estimator above is much better than a standard ratio estimator in this specific case. 

### Model-based estimates

I used generalized additive models [GAMs, @wood2017] to estimate eider density as a function of location and time. A GAM can be thought of as a generalized linear mixed model that fits smooth functions (splines) of covarates to predict the response, in addition to standard linear model terms if specified. The optimal degree of smoothing is determined during model fitting. GAMs are widely used in animal density surface modeling (e.g., @miller2013, @amundson2019, and many others).  

To set up the data for model fitting, I divided sampled transects into 1 or 6 km segments and assigned observations of eiders (including observation of zero eiders) to segment centriods. Segments on the boundary of the study area were often smaller due to boundary issues. I then assumed a half strip width of 200m and calculated an area for each segment. Total number of eider observations (pairs or males) were summed for each segment and the coordinates (in isomorphic UTMs) of the centriod were used for spatial location. Year was used as the covariate for temporal effects. The same procedure was used for both the entire ACP and for the Triangle survey, but for the ACP-only model (see below) the segment size for model fitting was 6 km. This was done for computational reasons (time) related to fitting many different models. When Triangle and ACP data were combined into one model, a common 1 km segment size was used. All spatial data manipulation was done using the R package `sf` [@sf]. 

I fit a variety of models to explore spatial and temporal effects. The linear predictor for each model was: 

$$M0: Count \sim s(X, Y)$$
$$M1: Count \sim s(X, Y) + s(Year)$$
$$M2: Count \sim s(X, Y) + s(Year) + ti(X, Y, Year)$$
$$M3: Count \sim s(X, Y) + s(Year) + s_{re}(fYear)$$
$$M4: Count \sim s(X, Y) + s_{re}(fYear)$$
In the above, $Count$ is the total number of pairs or males observed in a transect segment, $s()$ indicates a smooth function, $ti()$ indicate a "tensor product smooth" (a multidimensional smooth that allows the units for dimensions to differ), and $s_{re}()$ is a random effect in the usual mixed model sense (in `mgcv: s(..., bs = 're')`). $Year$ is calendar year as a continuous numeric variable, and $fYear$ is calendar year as a factor variable. Model $M0$ is just a smooth of location that does not change through time. Model $M1$ is a smooth of location and a separate smooth of year. This model means that on the log scale the spatial smooth does not change its relative shape through time but the overall height changes as a smooth function of year. Model $M2$ is a smooth of location, year, and a spatio-temporal interaction between location and year. Model $M2$ allows the shape of the spatial pattern to change through time and allows the time trend to depend on location. Model $M3$ estimates a smooth of location, a smooth of year, and a separate random effect of year, which allows abrupt non-smooth deviations from an underlying smooth trend. Model $M4$ estimates a smooth of location and treats year as a simple random effect. In the models above, each effect is written as an "average" or "partial" effect relative to the others and all contain an intercept (not shown). Thus, $s(X,Y) + s(Year)$ is an the average effect of location and an average effect of Year as deviation from an overall intercept. All models used a negative binomial response, a log link function, and the log segment area as an offset, which controlled for varying areas of segments near study area boundaries. Thus, the model is estimating the expected response in 1 $km^2$ of area. The scale parameter of the negative binomial was estimated during model fitting. Other response models were fit (Poisson, Tweedie) and all were found to be substantially worse fitting than the negative binomial. All model fitting and prediction was done using the R package `mgcv` [@r-mgcv]. Model diagnostics were inspected using the residual simulation methods in R package `DHARMa` [@DHARMa] and visualizations using the R package `gratia` [@r-gratia]. Special attention was given to quantile-quantile plots and over-dispersion and zero-inflation metrics. Residual simulations suggested that the negative binomial distribution appropriately modeled the large number of response zeros in these data. To select the best model, the `mgcv::AIC` function was used. 

During posterior simulation (see below), it was found that the model gave widely unrealistic total population posterior predictions when applied to the ACP survey area. Further investigation revealed that this was due to infrequent posterior samples that gave clusters of relatively high eider density far inland. The original spline basis used to model eider density was based on a 2D Duchon spline [@wood2017] across space with a first derivative penalty (`s(X, Y, bs = "ds", m=c(1, 0.5))` in the syntax of `mgcv` @r-mgcv). This spline has worked well for other, more common, species but appears to not work well when few or no non-zero observations are made far inland. Therefore, I used a 2D spatial spline based on a second derivative penalty, which is more common and the default in `mgcv` [a 'thin plate regression spline' or `s(.., bs = "tp")` in mgcv, @r-mgcv]. Upon simulation, the density surface was more smooth and lacked extreme high-density clusters far inland. However, when converted to total population estimates, some posterior samples still gave unrealistically high values (>>10000 indicated pairs) when simulations were simulated directly from the parameter estimates and covariance matrix using a mutlivariate normal distribution. This is due to the mutlivarate normal simulations being a poor approximation to the posterior when there are large sections of space that only contain zero observations (see the help files for the `mgcv` function `gam.mh` [@r-mgcv] or [@gratiaPost]). Therefore, the Metropolis-Hasting algorithm was used for posterior simulation. The total population posterior distribution was still skewed high as would be expected due to the log-normal response, but did not give as extreme predictions. Therefore, for all results here I used thin plate regression splines for spatial smooths, and I used Metropolis-Hastings sampling for posterior simulations on ACP models.  

For modelling the ACP data alone, additional models were fit that contained a random effect for observer. The response for these models was observer-specific; therefore, each segment was only 200m wide. An additional five models were fit where each model above also contained an observer effect, $s_{re}(Observer)$. Observer effects were not estimated for the Triangle data because they were not available at the time of this writing. When I combined the Triangle data with the ACP data, I used a fixed factor effect for survey (Triangle or ACP) to model any average difference between surveys and used a model with spatial and temporal smooths as in $M2$. A model with a spatio-temporal interactions ($M3$) was also explored for the combined Triangle and ACP data, but because the two data series do not overlap during the period of 1999-2006, the interaction term was not well estimated and produce widely variable population estimates during this time period during posterior simulations.  

Flying birds are not recorded during the ACP survey but are during the Triangle survey. Approximately 25% of the observations on the Triangle survey are flying birds. Therefore, I used data that contained flying birds for the model comparisons describe above, and then used the structure of the best fitting model to estimate model parameter using a data set where flying birds were removed. When Triangle and ACP data sets where combined, I removed flying birds from the Triangle data. 

### Prediction and posterior simulation

I used the `predict.gam` function from `mgcv` package [@r-mgcv, @wood2017] to predict the expected density of eiders across the study area (Triangle or ACP) in each year, 1999 to 2023 for the Triangle and 2007 to 2024 for the ACP.  Note that years with no data collection are included in these predictions. To do this, the study area was grid into 1 $km^2$ or smaller cells, smaller when the cell intersect the boundary of the study area, and centriods and area of each cell was calculated. A data set was then created by replicating these point locations and areas for each year. This large data set was then used in the `predict` function along with the model object from the best fitting GAM model. For spatial maps to represent relative differences in eider density, predictions were made on the response scale (`predict` option `type = "response"`) and the year effect was excluded (`exclude = "s(Year)"` or `exclude = c("s(year)", "ti(X,Y,Year)")`). For displaying the estimate coefficient of variation (CV), the prediction standard error was also returned and used to map the CV. Predictions at cell centriods were used for the entire cell, that is, the continuous smooth density surface was rasterized into 1 $km^2$ or smaller cells for display in maps. 

Posterior simulation was used to calculate population totals over the study area for each year (see examples in help files for `mgcv::predict` or @wood2017, p. 342-343). Predictions were made once on the same grid and years as described above but `type = lpmatrix` was specified so that a design matrix, $\textbf X$,  was returned with one row for each prediction location-year and one column for each term in the model. Multivariate normal samples of the model parameters, $\textbf b_i$ were then simulated using the fitted model parameter vector and variance-covariance matrix. For the Triangle study area, direct simulation from a multivariate normal distribution was used. For all simulations on the ACP study area, a Metropolis-Hasting algorithm was used to obtain samples because large areas of zero observations caused poor performance based on direct multivariate normal simulation using the parameter estimates and covariance matrix (see `?mgcv::gam.mh` in @r-mgcv or @gratiaPost). A posterior sample on the response scale was then calculated as 

$$\textbf y_i = \textbf a exp(\textbf X \textbf b_i )$$
where $\textbf a$ is a vector of the area of each grid cell and $\textbf y_i$ is a vector of the *expected responses*. Note that $\textbf y_i$ is the expectation of the negative binomial distribution and not an actual realization; thus, it is $>0$ for all predictions. The above simulation was repeated a large number of times (500) and results were stored. 

Various derived quantities of the posterior samples can also be calculated. To find the expected population total in a given year, the sampled vector can be summed over all cells for a given year. Let $i$ index the posterior sample, $j$ index year, and $k$ index the cell, then a posterior sample for the expected population total in year $j$ is

$$\hat Y_{ij} = \sum_k y_{ijk}.$$
Because the model was fit to pairs and single males, the above gives the total "indicated pairs". To transform this to birds and "indicated birds", the above posterior sample would be multiplied by 2. A detection corrected population total for "indicated birds" can be found as 

$$\hat N_{ij} = 2 \hat Y _{ij}/d_{ij}$$
if detection varies only by year, where $d_{ij}$ is a posterior sample of detection in year $j$. If detection varies with location or other covariates, then the adjustment needs to take place at a lower level of $y_{ijk}$. 

The posterior trend on the log scale from year $j$ to $j+t$ can be found as 

$$T_{it} = log \left[ (\hat N_{ij+t}/\hat N_{ij})^{1/t} \right] = \frac{log(\hat N_{ij+t}) - log(\hat N_{ij})}{t}.$$
Note that this measure of trend is identical to the slope parameter in a  "log-linear" regression when the smooth of year in the GAM model, $s(Year)$, gives a straight line. The advantage of the GAM is that the notion of trend can be generalized to non-linear cases where the trend may be increasing, decreasing, or changing cyclically through time. The posterior distribution for any quantity can then be displayed using a histogram or summarized with various metrics. I summarized the posterior with the mean and the 0.025, 0.5 (median), and 0.975 quantiles. For trend, I only used detection corrected posterior estimates (see below). All general data manipulation was done with program R [@r-base] and tidyverse packages [@tidyverse]. 

### Incorporating detection

At the time of this writing, the decoy detection data was not available for analysis from years 2019 to 2023. Therefore I used a detection rate based on estimates from 2018 when the protocol was improved over the first year of the study (2017). The detection analysis was completed by Catherine Bradley (USFWS, retired) and showed that detection rate in 2018 depended only on distance from transect [@bradley2018]. Because distance was not available for observations outside the decoy detection study area (a sub-set of the Triangle area), I calculated the average 'unconditional' detection rate over the distance transect half strip width (Table 3 from  @bradley2018). I also used this same detection rate for the ACP because no better estimate for Steller's Eider is available. The detection rate used here should be viewed as a provisional until a more complete analysis can be conducted incorporating data from 2019 to 2023. As such, it is meant to be the average detection rate over all observations, including the covariates of distance, year, observer, sun angle, and etc. 

To calculate an average detection rate, I assumed that eiders (detected and undetected) were expected to be uniformly distributed with distance from the transect, which is true given the design of the Triangle and ACP surveys. I then averaged detection and the estimate variance over each of the four distance bins in Table 3 of @bradley2018. Because distance bins were of equal width, detection was estimated as a factor of bin (i.e, a continuous distance function was not estimated), and no other covariates were found important, the mean and variance are a simple equally weighted average over the distance bins. In Table 3 of @bradley2018 only the mean and ninety-five percent credible interval was given, so I approximated the standard error of the estimate in each bin by the range divided by 2*1.96, which is the typical number of standard deviations in the range of a symetric credible interval.  

```{r}
#| label: fig-detection
#| fig-cap: Steller's Eider detection probably prior used in simulations for population size calculations. This is the average 'unconditional' detection rate over distance estimated in 2018 from Table 3 of Brandley (2018).

detdf <- data.frame(Bin = 1:4, p = c(0.514, 0.457, 0.143, 0.114), 
                    lower = c(0.338, 0.217, 0.048, 0.026), 
                    upper=c(0.689, 0.717, 0.306, 0.310))
mP <- mean(detdf$p)
sSE <- sqrt(mean( ((detdf$upper - detdf$lower)/(2*1.96))^2 ))
#method of moments for Beta distribution
shape1 = mP*( mP*(1-mP)/sSE^2 - 1)
shape2 = (1 - mP)*( mP*(1-mP)/sSE^2 - 1)

sdf <- data.frame(Sightability = seq(0, 0.75, length = 10000), 
                  Density = dbeta(seq(0, 0.75, length = 10000), 
                                  shape1 = shape1, 
                                  shape2 = shape2))
ggplot(data = sdf, aes(x = Sightability, y = Density)) + geom_area(fill = "orange") + 
  geom_text(aes(x = 0.1, y = 6, label = paste0("Mean = ", round(mP,3)))) + 
  geom_text(aes(x = 0.1, y = 5.5, label = paste0("SD = ", round(sSE,3)))) + 
  xlab("Detection") + 
  labs(title = "Detection Prior")

ggsave("results/sightability_prior.png")

```

This worked out to a detection rate of `r round(mP, 3)` with a standard deviation of `r round(sSE, 3)` [@fig-detection]. Note that this detection prior will result in a large amount of uncertainty in the estimated number of eiders. At detection rates of 0.16 and 0.47 (the fifth and ninety-fifth percentile of the distribution, respectively), the eider population estimate will be increased about 6- and 2-fold, respectively. Thus, increased information on detection would be valuable for improving our knowledge of the eider population size. Unfortunately, at the time of this writing, staff time was not available to produce improved estimates from the 2019-2023 data.  

The posterior population estimate for "indicated breeding birds", accounting for constant detection, was then calculated as above

$$\hat N_{ij} = 2\hat Y _{ij}/d_{i}.$$
with $d_i$ sampled from a Beta distribution with the mean and standard deviation above. If detection varies with year, location or other covariates, then the adjustment needs to take place at a lower level of $y$ and $d$, which would vary by year or other covariates. 

## Results

### Observations of Steller's Eider

Observed locations of Steller's Eider across the study area are shown in @fig-observations. Most observations are in the northern coastal area of the Triangle and Teshekpuk Lake area. No observations of Steller's Eider have been made in the two southernmost ACP strata. Observations from the Triangle survey abruptly stop at the southern edge of of Triangle survey area, suggesting that eiders do sometimes exist south of that area than the observations from either survey suggest. @tbl-obs shows the count of Steller's Eider observations by year for both the Triangle and ACP surveys. For the Triangle survey, the count is separated for flying and non-flying birds. Note that about 25% of the total observations in the Triangle are of flying birds. Flying birds are not recorded on the ACP survey. @fig-acpobsyear gives the count of Steller's Eider by year and observation type for the ACP survey. The single observation of "open" was treated as a single in all analyses. 

```{r}
#| label: fig-observations
#| fig-cap: "Observed Steller's eider during the ACP (2007-2023) and Triangle (1999-2023) surveys."
#need to plot bird locations
path <- "../ACP-Mapping/Data/ACP_2023/analysis_output/Bird-QC-Obs-2024-11-12.csv"
acp.obs <- read_csv(file = path) %>%
  filter(Species == "STEI") |> 
  st_as_sf(coords = c("Lon", "Lat"), crs = 4326) |>
  mutate(Survey = "ACP") |>
  select(Year, Survey, Obs_Type, Num)
abr.obs <- readxl::read_xlsx(path = "data/STEI_obs_1999-2023.xlsx", 
                             sheet = "STEI Obs 1999-2023") |> 
  rename(Transect = "Standard Transect") |>
  arrange(Year, Transect) |>
  st_as_sf(coords = c("LongDD83", "LatDD83"), crs = 4269) |>
  st_transform(crs = 4326) |>
  mutate(Survey = "Triangle") |>
  select(Survey)
df <- rbind(abr.obs, select(acp.obs, Survey))
ggplot(data = acp) + geom_sf() + geom_sf(data = df, aes(col = Survey))
# ggplot(data = acp) + geom_sf() + 
#    geom_sf(data = abr.obs, aes(col = Survey)) + 
#    geom_sf(data = acp.obs, aes(col = Obs_Type))
#there is an open Obs_Type!
```

```{r}
#| label: fig-acpobsyear
#| fig-cap: "Observations of singles and pairs on the Arctic Coastal Plain (ACP) survey by year. The one 'open' observed in 2019 was treated as a single male."
df <- mutate(acp.obs, Type = factor(Obs_Type)) |>
  group_by(Year, Type) |>
  summarize(Number = sum(Num))
ggplot(df, aes(fill=Type, y=Number, x=factor(Year))) + 
    geom_bar(position="dodge", stat="identity") +  
  xlab("Year")
```

```{r}
#| label: tbl-obs
#| tbl-cap: Number of Steller's Eider observations by year for the ACP and Triangle surveys. 

acp.obs <- read_csv(file = path) %>%
  filter(Species == "STEI") |>
  select(Year) |>
  group_by(Year) |>
  summarize(ACP = n())
abr.obs <- readxl::read_xlsx(path = "data/STEI_obs_1999-2023.xlsx", 
                             sheet = "STEI Obs 1999-2023") |>
  filter(On_Transect == "Y") |>
  select(Year, Flying, Males, Pairs)
abr.nofliers <- abr.obs |> filter(Flying == "N") |>
  group_by(Year) |>
  summarise("Triangle \n Not Flying" = sum(Males)+sum(Pairs))
abr.flier <- abr.obs |> filter(Flying == "Y") |>
  group_by(Year) |>
  summarise("Triangle \n Flying" = sum(Males)+sum(Pairs))
df <- full_join(abr.nofliers, abr.flier) |> mutate_all(~replace(., is.na(.), 0)) |>
  full_join(acp.obs) |> mutate_at(4, ~replace(., Year > 2006 & is.na(.) & 
                                                Year != 2021, 0)) |>
  rbind(c(2020, NA, NA, NA)) |>
  arrange(Year)
kableExtra::kable(df)

```

### Design-based estimates

```{r}
#| label: fig-design
#| layout-nrow: 2
#| fig-cap: "Design-based estimates in the Triangle survey area without (a) and with (b) flying birds included. No detection correction was applied."
#| fig-subcap: 
#|   - "without flying birds"
#|   - "with flying birds"
#Use a design-based estimate for the triangle data
library(tidyverse)
library(sf)
library(units)
library(readxl)
#read in data
triangle <- st_read(dsn = "data/Barrow_Triangle_STEI_Aerial_SA", quiet = TRUE)
TriangleArea <- st_area(triangle) |> set_units("km^2") |> drop_units()
trans <- st_read(dsn = "data/Barrow_STEI_standardized_transects_Aug2024.gpx", 
                 layer = "routes", quiet = TRUE) |>
  select(Transect = name)
#add length to transect df
trans <-   mutate(trans, Length = units::set_units(st_length(trans), "km"))
#effort data
effort <- read_xlsx(path = "data/STEI_obs_1999-2023.xlsx", sheet = "Years surveyed") |> 
  pivot_longer(2:26, names_to="Year", values_to="Surveyed") |> 
  drop_na() |>
  arrange(Year, Transect) |>
  mutate(Year = as.numeric(Year)) |>
  filter(Surveyed == "Y") |>
  select(-Surveyed) |>
  left_join(st_drop_geometry(trans))
#read in birds and transform
birds <- read_xlsx(path = "data/STEI_obs_1999-2023.xlsx", sheet = "STEI Obs 1999-2023") |> 
  rename(Transect = "Standard Transect", Lon = "LongDD83", Lat = "LatDD83") |>
  arrange(Year, Transect) |>
  st_as_sf(coords = c("Lon", "Lat"), crs = 4269) |>
  st_transform(crs = 4326)
birds2 <- birds |> cbind(st_coordinates(birds)) |> st_drop_geometry() |>
  rename(Lon = X, Lat = Y, single = Males, pairs = Pairs) |>
  mutate(Observer = "999", Month = 6, Day = 99, Time = 999) |>
  pivot_longer(cols = c("single", "pairs", "Females"), names_to = "Obs_Type", 
               values_to = "Num") |>
  filter(Obs_Type != "Females", On_Transect == "Y") |>
  select(Species, Year, Month, Day, Time, Observer, Transect, Num, Obs_Type, 
         Flying, Lon, Lat) |>
  filter(Flying == "N") #remove flying birds!!
  
birds3 <- birds2 |>  right_join(effort) |> #right join to add zeros
  mutate(Area = Length*set_units(0.4, "km"), 
         Num = replace(Num, is.na(Num), 0)) |> #replace Nas with 0 observations
  group_by(Year, Transect) |>
  #INDICATED BIRDS!!!
  summarise(Num = 2*set_units(sum(Num), "1"), Area = mean(Area)) |>
  select(Year, Transect, Area, Num) 
# design.est <- birds3 |> 
#   group_by(Year) |>
#   summarise(Density = sum(Num)/sum(Area), n = n(), mean_Num = mean(Num), 
#             sd_Num = sd(Num), 
#             sd_Area = sd(Area), 
#             var_Density = sum( (Num - Density*Area)^2 )/(n - 1), 
#             Total = drop_units(Density*TriangleArea), 
#             sd_Total = drop_units(TriangleArea*sqrt((1 - n/124)*var_Density/n))) |>
#   mutate(upper = Total + 2*sd_Total, lower = max(0, Total - 2*sd_Total))
# #plot it!
# gg <- ggplot(data = design.est) + 
#   geom_pointrange(aes(x = Year, y = Total, ymin = lower, ymax = upper))
# print(gg)
# #look at sum_Num v. sum(area)
# ggplot(data = birds3, aes(x = Area, y = Num)) + geom_point() + 
#   geom_smooth(method = "lm")
# #RATIO MODEL NO GOOD!
# #look at mean variance
# ggplot(data = design.est, aes(x = mean_Num, y = sd_Num^2)) + geom_point() + 
#   geom_abline(slope = 1, intercept = 0)
# #Try a simple plot/mean estimate: assume transect are same length
# design.est <- birds3 |> 
#   mutate(Area = drop_units(Area), Num = drop_units(Num)) |>
#   group_by(Year) |>
#   summarise(sum_Num = sum(Num), 
#             n = n(),
#             Area = sum(Area), 
#             Total = sum_Num*TriangleArea/Area,
#             sd_Num = sd(Num), 
#             sd_Total = (TriangleArea/Area)*sqrt( (1 - Area/TriangleArea)*(n*(sd_Num)^2) )) |>
#   mutate(upper = Total + 2*sd_Total, 
#          lower = if_else(Total - 2*sd_Total < 0, 0, Total - 2*sd_Total))
# 
# ggplot(data = design.est) +  
#   geom_ribbon(aes(x = Year, ymin = lower, ymax = upper), fill = "orange", alpha = 0.5) + 
#   geom_line(aes(x = Year, y = Total)) + 
#   geom_point(aes(x = Year, y = Total)) +
#   scale_x_continuous(breaks = seq(1999, 2025, by = 2)) + 
#   ylab("Estimated Indicated Bird Index") +
#   labs(title = "Design-based Estimated breeding bird index in Triangle (no detection)")
#ggsave("results/trianle_raw_design_ibb_year.png")
#try a mean density estimate: with variable length transects.
#  from Intro to Distance Sampling, p. 79 (Buckland et al. 2001); "R3" of Fewster 2009
design.est2 <- birds3 |> 
  mutate(Area = drop_units(Area), Num = drop_units(Num)) |>
  group_by(Year) |>
  summarise(sum_Num = sum(Num), 
            n = n(),
            sArea = sum(Area), 
            Total = sum_Num*TriangleArea/sArea,
            sd_Num = sd(Num), 
            sd_Total = (TriangleArea/sArea) * 
              sqrt( (sArea*sum(Area*(Num/Area - sum_Num/sArea)^2)/(n - 1) )) ) |>
  mutate(upper = Total + 2*sd_Total, 
         lower = if_else(Total - 2*sd_Total < 0, 0, Total - 2*sd_Total)) |>
  select(Year, n, Total, sd_Total, upper, lower)
# ggplot(data = design.est) +  
#   geom_ribbon(aes(x = Year, ymin = lower, ymax = upper), fill = "orange", alpha = 0.5) + 
#   geom_line(aes(x = Year, y = Total)) + 
#   geom_point(aes(x = Year, y = Total)) +
#   geom_ribbon(data = design.est2, aes(x = Year, ymin = lower, ymax = upper), 
#               fill = "purple", alpha = 0.5) + 
#   geom_line(data = design.est2, aes(x = Year, y = Total)) +
#   geom_point(data = design.est2, aes(x = Year, y = Total), col = "purple") +
#   scale_x_continuous(breaks = seq(1999, 2025, by = 2)) + 
#   ylab("Estimated Indicated Bird Index") +
#   labs(title = "Design-based Estimated breeding bird index in Triangle (no detection)")
# #that's better, and both are similar: use second option for now:
ggplot(data = design.est2, aes(group=Year<2020)) +  
  geom_ribbon(aes(x = Year, ymin = lower, ymax = upper), fill = "orange", alpha = 0.5) + 
  geom_line(aes(x = Year, y = Total)) + 
  geom_point(aes(x = Year, y = Total)) +
  scale_x_continuous(breaks = seq(1999, 2025, by = 2)) + 
  scale_y_continuous(limits = c(0, 450)) + 
  ylab("Indicated Breeding Bird Index")
# +
#   labs(title = "Design-based estimated breeding bird index in Triangle (no detection)")
ggsave("results/design_ABR_noflying.png")
#make df of estimate for output below
df <- mutate(design.est2, Flying = FALSE)
#should try "O2" of Fewster 2009, recommended for systematic designs with 
#  gradient in density
################################################################################
#add flying birds
birds2 <- birds |> cbind(st_coordinates(birds)) |> st_drop_geometry() |>
  rename(Lon = X, Lat = Y, single = Males, pairs = Pairs) |>
  mutate(Observer = "999", Month = 6, Day = 99, Time = 999) |>
  pivot_longer(cols = c("single", "pairs", "Females"), names_to = "Obs_Type", 
               values_to = "Num") |>
  filter(Obs_Type != "Females", On_Transect == "Y") |>
  select(Species, Year, Month, Day, Time, Observer, Transect, Num, Obs_Type, 
         Flying, Lon, Lat) #Did not remove flying birds!

birds3 <- birds2 |>  right_join(effort) |> #right join to add zeros
  mutate(Area = Length*set_units(0.4, "km"), 
         Num = replace(Num, is.na(Num), 0)) |> #replace Nas with 0 observations
  group_by(Year, Transect) |>
  #INDICATED BIRDS!!!
  summarise(Num = 2*set_units(sum(Num), "1"), Area = mean(Area)) |>
  select(Year, Transect, Area, Num) 
design.est2 <- birds3 |> 
  mutate(Area = drop_units(Area), Num = drop_units(Num)) |>
  group_by(Year) |>
  summarise(sum_Num = sum(Num), 
            n = n(),
            sArea = sum(Area), 
            Total = sum_Num*TriangleArea/sArea,
            sd_Num = sd(Num), 
            sd_Total = (TriangleArea/sArea) * 
              sqrt( (sArea*sum(Area*(Num/Area - sum_Num/sArea)^2)/(n - 1) )) ) |>
  mutate(upper = Total + 2*sd_Total, 
         lower = if_else(Total - 2*sd_Total < 0, 0, Total - 2*sd_Total)) |>
  select(Year, n, Total, sd_Total, upper, lower)
ggplot(data = design.est2, aes(group=Year<2020)) +  
  geom_ribbon(aes(x = Year, ymin = lower, ymax = upper), fill = "orange", alpha = 0.5) + 
  geom_line(aes(x = Year, y = Total)) + 
  geom_point(aes(x = Year, y = Total)) +
  scale_x_continuous(breaks = seq(1999, 2025, by = 2)) + 
  scale_y_continuous(limits = c(0, 450)) + 
  ylab("Indicated Breeding Bird Index") 
# +
#   labs(title = "Design-based estimated breeding bird index in Triangle (no detection)")
ggsave("results/design_ABR_flying.png")
df <- rbind(df, mutate(design.est2, Flying = TRUE))
write_csv(df, file = "results/design_ABR.csv")

```

```{r}
#| label: fig-designACP
#| fig-cap: "Design-based estimates in the Arctic Coastal Plain survey area. No flying birds are recorded in this survey. No detection correction was applied."

# calculate design-based estimate
# df <- AKaerial::ACPHistoric$combined |>
#   filter(Species == "STEI") |>
#   select(Year, ibb, ibb.se) |>
#   mutate(upper = ibb + 2*ibb.se,
#          lower = if_else(ibb - 2*ibb.se < 0, 0, ibb - 2*ibb.se))
# 
# ggplot(data = df, aes(x = Year, y=ibb, group=Year<2020)) +
#   geom_ribbon(aes(ymin = lower, ymax = upper),
#               fill = "orange", alpha = 0.5) +
#   geom_line() +
#   geom_point() +
#   scale_x_continuous(breaks = seq(2006, 2025, by = 2)) +
#   scale_y_continuous(limits = c(0, 1275)) +
#   ylab("Indicated Breeding Bird Index") 
# # +
# #   labs(title = "Design-based Estimated breeding bird index on the ACP (no detection)")
################################################################################
##use ACP-Mapping data and "R3" of Fewster
path = "../ACP-Mapping/Data/ACP_2023/analysis_output/ACP_DesignStrata_QC.gpkg"
acp <- st_read(dsn=path, quiet = TRUE)
acp <- mutate(acp, StratumArea = units::set_units(st_area(acp), "km^2"))

path = "../ACP-Mapping/Data/ACP_2023/analysis_output/Bird-QC-Obs-2024-11-12.csv"
birds <- read_csv(file = path) |>
  filter(Species == "STEI") |>
  mutate(Obs_Type = replace(Obs_Type, Obs_Type == "open", "single"))
#table(birds$Year, birds$Obs_Type)
path = "../ACP-Mapping/Data/ACP_2023/analysis_output/ACP_DesignTrans_QC_2024-11-12.gpkg"
trans <- st_read(dsn = path, quiet = TRUE)
trans <- mutate(trans, Length = units::set_units(st_length(trans), "km")) |>
  mutate(trans, Year = as.numeric(Year))
birds <- right_join(st_drop_geometry(birds), st_drop_geometry(trans)) |>
  mutate(Area = Length*set_units(0.4, "km"), 
         Num = replace(Num, is.na(Num), 0)) |> #replace Nas with 0 observations
  left_join(st_drop_geometry(acp)) |>
  filter(Stratum != "Not Sampled") |> 
  group_by(Year, Stratum, Transect) |>
  #INDICATED BIRDS!!!
  summarise(Num = 2*sum(Num), Area = units::drop_units(mean(Area)), 
            StratumArea = units::drop_units(mean(StratumArea))) |>
  select(Year, Stratum, Transect, Area, StratumArea, Num) |>
  ungroup()
birds2 <- birds |> 
  group_by(Year, Stratum) |>
  summarise(sum_Num = sum(Num), 
            n = n(),
            sArea = sum(Area), 
            StratumArea = mean(StratumArea), 
            Total = sum_Num*StratumArea/sArea,
            sd_Num = sd(Num), 
            sd_Total = (StratumArea/sArea) * 
              sqrt( (sArea*sum(Area*(Num/Area - sum_Num/sArea)^2)/(n - 1) )) ) |>
  ungroup() |>
  group_by(Year) |>
  summarise(Total = sum(Total), sd_Total = sqrt(sum(sd_Total^2)), 
         upper = Total + 2*sd_Total, 
         lower = if_else(Total - 2*sd_Total < 0, 0, Total - 2*sd_Total))

ggplot(data = birds2, aes(x = Year, y=Total, group=Year<2020)) +  
  geom_ribbon(aes(ymin = lower, ymax = upper), 
              fill = "orange", alpha = 0.5) + 
  geom_line() + 
  geom_point() +
  scale_x_continuous(breaks = seq(2006, 2025, by = 2)) + 
  scale_y_continuous(limits = c(0, 2000)) + 
  ylab("Indicated Breeding Bird Index")
ggsave("results/design_ACP.png")
write_csv(birds2, file = "results/design_ACP.csv")

```


Design-based estimates for the Triangle survey area are shown in @fig-design and for the ACP in @fig-designACP. No survey was conducted in 2020 for the Triangle survey or in 2020 and 2021 for the ACP. Estimate are presented for non-flying (a) and flying (b) birds [@fig-design]. Estimates for flying birds are higher because approximately 25% of the observed birds are flying. Standard waterfowl survey methods do not record flying birds because it is not known if they are associated with the survey area and flux causes a high bias in estimates due to birds moving into the strip as the observer moves along. On the ACP [@fig-designACP] flying birds are not recorded for these reasons. Variance of estimates is much larger for the ACP than for the Triangle survey.  

Design based estimates make minimal assumptions and provide an important check on model-based estimates. Two important assumptions behind design-based estimates are that (1) the survey design is unbiased (random or systematic selection of sampling units, here transects) and (2) the survey was implemented as designed. These assumptions are met in these surveys. An additional often unstated assumption is that the response is measured without error. In this case, measurement errors include a large detection bias and, presumably less often, species miss-identification. Detection bias causes a lower mean response and increased variance in response for intermediate (~50%) detection rates. Finally, design based estimates are based on estimating a mean response across all sampled transects, and then using statistical sampling theory to derive estimator variance. This works well for common species and large sample size (many transects), but for rare species that might not be encountered on any transects during a sample, the estimate and its variance is necessarily zero when there are no detections even when the species might ave existed in the survey area. This might have been the case in 2009 on the Triangle area [@fig-design] and in 2010 for all strata of the ACP [@fig-designACP], and was the case in 2, 10, 16 and 16 years out of 16 for the High, Teshekpuk, and Medium, and Low strata of the ACP. 

### Model-based Estimates: Triangle

Models fit to data from the Triangle showed that the best model contains a spatial smooth, a year smooth, and a space-by-time (spatio-temporal interaction) smooth (a model M2, @tbl-modelsTri). The model with a separate space and time smooth (M1) and all other models were worse ($\Delta AIC >6$). In exploratory model runs using a different spline smoother (see above, Methods: Model-based estimates), however, model M1 was slightly better but nearly identical to M2 in terms of AIC. For all results below, I used model M2. 

```{r}
#| label: tbl-modelsTri
#| tbl-cap: AIC table for model fit to Triangle data. Model structures are described in the main text. 
library(tidyverse)
library(mgcv)
#load model results
load("results/abr.RData")

#AIC table
df <- AIC(fit0, fit1, fit2, fit1.re, fit1.1.re)
df$DeltaAIC <- df$AIC - min(df$AIC)
rownames(df) <- c("M0", "M1", "M2", "M3", "M4")
df <- rownames_to_column(df, var = "Model") |> mutate_at(.vars=2:4, .fun=round, digits = 2) |> arrange(DeltaAIC)
kableExtra::kable(df)
```

The spatial, temporal, and spatio-temporal partial effects of model M2 are shown in @fig-model. Highest density of Steller's eider was in the northern section of the Triangle and the lowest density was in the southeast, but as shown by the spatio-temporal smooth, density decreased through time in the southeast and increased in the northwest of the Triangle. Note that the spatio-temporal smooth has been shrunken to a simple 2D plane that is changing through time so that it is increasing in the northwest and decreasing in the southeast. The temporal pattern appears cyclic with a period of 5-7 years and no strong directional trend [@fig-model (b)]. 

```{r}
#| label: fig-model
#| fig-cap: "Plots of spatial (a), temporal (b), and (c) spatio-temporal partial effects from the best fitting model. In (b) the shaded region is 2 standard errors. in (c) black lines show contour lines of equal partial effect, and each pannel is a different point in time."
#| fig-subcap: 
#|   - "Spatial smooth"
#|   - "Temporal smooth"
#|   - "Spatio-temporal smooth"
#| layout: [[45,-10, 45], [100]]

library(gratia)
draw(fit2, select = 1, dist = 0.02, rug = FALSE) + 
  theme(axis.text.x=element_blank(), 
      axis.ticks.x=element_blank(), 
      axis.text.y=element_blank(), 
      axis.ticks.y=element_blank()) 
draw(fit2, select = 2, dist = 0.02, rug = FALSE) + 
  theme(axis.text.x=element_blank(), 
      axis.ticks.x=element_blank(), 
      axis.text.y=element_blank(), 
      axis.ticks.y=element_blank()) 
draw(fit2, select = 3, dist = 0.02, rug = FALSE) + 
  theme(axis.text.x=element_blank(), 
      axis.ticks.x=element_blank(), 
      axis.text.y=element_blank(), 
      axis.ticks.y=element_blank()) 
```

Spatial density of Steller's Eider across the Triange after removing the effects of year and the space-by-year interaction (i.e., the average or partial effect of location) is shown in @fig-densityABR. Relatively high densities have occured in the north and moderate densities in the east and far southwest. With the space-by-year effect, however, these areas of higher densities in the south have decreased.  

![Predicted average density of Steller's Eider after removing the effect of year and space-by-year intereaction in the Triangle survey area.](results/average_density_ABR.png){#fig-densityABR}

Population estimates across the Triangle survey area by year for indicated breeding birds without (a) and with (b) a detection correction is shown in @fig-yearABR. The population appears to cycle on a period of 5-7 years. With the application of the detection estimate shown in @fig-detection, there is a substantial increase in the population estimates, the uncertainty, and in the skew of the posterior toward higher population estimates. This is due to the low mean detection rate and high uncertainty in the detection prior. Note that the model predicts the population in 2020 when no survey was conducted. 

::: {#fig-yearABR layout-nrow=2}

![](results/ABR_noD_ibb_year.png){#fig-abrA}

![](results/ABR_withD_ibb_year.png){#fig-abrA}

Posterior estimates of Steller's Eider in the Triangle survey area without accounting for detection (a) and after applying a detection correction (b). The black line is the posterior mean, the dashed black line is the posterior median, and the orange band is the 95% credible interval.
:::

```{r}
#| label: fig-trendABR
#| fig-cap: "Posterior trend estimates for Steller's Eider in the Triangle survey area, 1999-2023. The y axis is the log of the geometric mean growth rate, and the x axis is the lag-year trend, i.e.,  for lag 10 gives the 10-year trend from 2013 to 2023. Posteriors described as in other figures."
 
post <- readRDS(file = "results/ABR_post.RDS")
#find long term posterior mean and CI
m = round(mean(apply(post[,-c(1:5)], 1, mean)), 1)
q = round(quantile(apply(post[,-c(1:5)], 1, mean), 
                   probs=c(0.025, 0.05, 0.5, 0.975)), 1)

df <- data.frame(NULL)
tyears <- dim(post)[2]
for( t in 1:(tyears-1)){
  trend <- (log(post[,tyears]) - log(post[,tyears-t]))/t
  df <- rbind(df, data.frame(t = t, mtrend = mean(trend), 
                             med = quantile(trend, probs = 0.5), 
                            upper = quantile(trend, probs = 0.975), 
                            lower = quantile(trend, probs = 0.025)))
}

ggplot(data = df, aes(x = t, y=mtrend)) +
  geom_ribbon(aes(ymin = lower, ymax = upper), fill = "orange", alpha = 0.5) + 
  geom_line() + 
  geom_line(aes(y = med), linetype = "dashed") +
  geom_hline(yintercept = 0) +
  scale_x_continuous(breaks = seq(2, 24, by = 2)) + 
  scale_y_continuous(breaks = seq(-1, 0.6, by = 0.2)) + 
  ylab("log Trend") + 
  xlab("Lag")
ggsave(file = "results/trend_ABR.png")
write_csv(df, file = "results/trend_ABR.csv")
```

### Model-based Estimates: ACP

Models fit to the ACP data showed that model with a random effect of year, rather than a smooth of year, fit best (@tbl-modelsACP). In addition, models with a random observer effect contributed nothing to improvement in AIC (@tbl-modelsACP). Upon examining model summary statistics, models with a smooth of year shrunk to a straight line and observer effect variance was essentially zero (results not shown).  These results are likely due to the very few observations of Steller's Eider on the ACP survey. Spatial effects showed a simple decline in eider density as distance from the coast increase (@fig-modelACP a), and temporal effects that varied greatly on the log scale (@fig-modelACP b).  

```{r}
#| label: tbl-modelsACP
#| tbl-cap: "AIC table for model fit to ACP data. Model structures are described in the main text. The suffix '.obs' indicate a model that contained a random effect of observer."
library(tidyverse)
rm(list=ls())
load("results/ACP.RData")
aic$DeltaAIC <- aic$AIC - min(aic$AIC)
aic <- aic[ !row.names(aic) %in% c("fit2.re", "fit2.o.re"),]
rownames(aic) <- c("M0", "M0.obs", "M1", "M1.obs", "M2", "M2.obs", "M3", "M4", "M3.obs", "M4.obs")
aic <- rownames_to_column(aic, var = "Model") |> 
  mutate_at(.vars=2:4, .fun=round, digits = 2) |> 
  arrange(DeltaAIC)
kableExtra::kable(aic)
```

```{r}
#| label: fig-modelACP
#| fig-cap: "Partial effect of (a) spacial smooth and (b) year for the ACP model M3."
#| layout-nrow: 2
#| fig-subcap: 
#|   - "Spatial smooth"
#|   - "Temporal effects"
library(gratia)
draw(fit0.re, select = 1, dist = 0.02, rug = FALSE) + 
  theme(axis.text.x=element_blank(), 
      axis.ticks.x=element_blank(), 
      axis.text.y=element_blank(), 
      axis.ticks.y=element_blank()) 

df <- data.frame(
  Effect = fit0.re$coefficients[str_detect(names(fit0.re$coefficients), "fYear")], 
  Year = as.numeric(levels(fit0.re$model$fYear)))
ggplot(data = df, aes(x = Year, y = Effect)) + geom_point() + 
  scale_x_continuous(breaks = seq(2007, 2025, by = 2)) +
  labs(title = "s(fYear)")
```

Posterior simulation of the year-specific total across the whole ACP are shown in @fig-yearACP without a detection correction (a) and with a detection correction (b). The population appear to fluctuate in a similar manner as in the Triangle survey estimates, but the year-specific estimate for the ACP are much less precise. Because the best model contained only a simple random effect and the survey was not completed in 2020 and 2021, predictions were not made for these years using this model. Such prediction could be made by simulating the variance of the random effect but this would simply give an estimate that spans the range of historical estimates. 
Note that year-specific estimates of the total number of eider across the ACP  based on model $M3$ (@fig-acpA) are less extreme than those based on design-based estimates (@fig-designACP). That is, the model based estimate given lower number in high abundance year and higher estimates in low abundance years compared to the model-based estimates. This is do to the 'shrinkage' or regularization of the year random effect. In general, design based estimate might over estimate the eider population when one or more eider happen to be observed on a transect in one year and underestimate when one or more eiders are not observed on a transect, even though they are in the study area. 

::: {#fig-yearACP layout-nrow=2}

![](results/ACP_noD_ibb_year.png){#fig-acpA}

![](results/ACP_withD_ibb_year.png){#fig-acpB}

Posterior estimates of Steller's Eider in across the ACP survey area without accounting for detection (a) and after applying a detection correction (b). The black line is the posterior mean, the dashed black line is the posterior median, and the orange band is the 95% credible interval.
:::

Trends for Steller's Eider across the ACP are shown in @fig-trendACP. For all time ranges (lags), the trend was not well estimated. For example, the 10-year trend posterior mean was 0.11 (CI: -0.03, 0.23), which could be a modest decrease to a very fast increase [cf., @fig-acpB]. For all time period the 95% credible interval overlaps 0 and the upper bound was often > 0.15 [@fig-trendACP].

```{r}
#| label: fig-trendACP
#| fig-cap: "Posterior trend estimates for Steller's Eider in the ACP survey area, 2007-2024. The y axis is the log of the geometric mean growth rate, and the x axis is the lag-year trend, i.e.,  for lag 10 gives the 10-year trend from 2014 to 2024. Posteriors described as in other figures."
 
post <- readRDS(file = "results/ACP_post.RDS")
#augment post with NAs for years 2020 and 2021
tmp <- matrix(NA, nrow = dim(post)[1], ncol = dim(post)[2]+2)
tmp[,1:13] <- post[,1:13]
tmp[,16:18] <- post[,14:16]
post <- tmp
rm(tmp)
#find long term posterior mean and CI
m = round(mean(apply(post[,], 1, mean, na.rm = TRUE)), 1)
q = round(quantile(apply(post[,], 1, mean, na.rm = TRUE), 
                   probs=c(0.025, 0.05, 0.5, 0.975)), 1)

df <- data.frame(NULL)
tyears <- dim(post)[2]
for( t in 1:(tyears-1)){
  trend <- (log(post[,tyears]) - log(post[,tyears-t]))/t
  df <- rbind(df, data.frame(t = t, mtrend = mean(trend, na.rm = TRUE), 
                             med = quantile(trend, probs = 0.5, na.rm = TRUE), 
                            upper = quantile(trend, probs = 0.975, na.rm = TRUE), 
                            lower = quantile(trend, probs = 0.025, na.rm = TRUE)))
}

ggplot(data = df, aes(x = t, y=mtrend)) +
  geom_ribbon(aes(ymin = lower, ymax = upper), fill = "orange", alpha = 0.5) + 
  geom_line() + 
  geom_line(aes(y = med), linetype = "dashed") +
  geom_hline(yintercept = 0) +
  scale_x_continuous(breaks = seq(2, 24, by = 2)) + 
  scale_y_continuous(breaks = seq(-0.5, 2.5, by = 0.25)) + 
  ylab("log Trend") + 
  xlab("Lag")
ggsave(file = "results/trend_ACP.png")
write_csv(df, file = "results/trend_ACP.csv")

```

### Model-based Estimates: Triangle and ACP combined

::: {#fig-mapComb layout-nrow=3}

![](results/combined_partial_1.png){#fig-combPart}

![](results/combined_partial_2.png){#fig-temp}

![](results/combined_map_zoomed.png){#fig-combZoom}

Partial effect plots for the spatial (a) and temporal (b) smooth from a GAM model fit to the Triangle and ACP data combined. 
:::

::: {#fig-yearComb layout-nrow=2}

![](results/combined_year_noD.png){#fig-combA}

![](results/combined_year_withD.png){#fig-combB}

Posterior estimates of Steller's Eider in across the ACP survey area with both ACP and Triangle data combined for model fitting. Posteriors are given without accounting for detection (a) and after applying a detection correction (b). The black line is the posterior mean, the dashed black line is the posterior median, and the orange band is the 95% credible interval.
:::

```{r}
#| label: fig-trendComb
#| fig-cap: "Posterior trend estimates for Steller's Eider in the ACP survey area using data from both the Triangle and ACPsurveys, 1999-2024. The y axis is the log of the geometric mean growth rate, and the x axis is the lag-year trend, i.e.,  for lag 10 gives the 10-year trend from 2014 to 2024. Posteriors described as in other figures."
 
post <- readRDS(file = "results/Comb_post.RDS")
#find long term posterior mean and CI
m = round(mean(apply(post[,], 1, mean, na.rm = TRUE)), 1)
q = round(quantile(apply(post[,], 1, mean, na.rm = TRUE), 
                   probs=c(0.025, 0.05, 0.5, 0.975)), 1)

df <- data.frame(NULL)
tyears <- dim(post)[2]
for( t in 1:(tyears-1)){
  trend <- (log(post[,tyears]) - log(post[,tyears-t]))/t
  df <- rbind(df, data.frame(t = t, mtrend = mean(trend, na.rm = TRUE), 
                             med = quantile(trend, probs = 0.5, na.rm = TRUE), 
                            upper = quantile(trend, probs = 0.975, na.rm = TRUE), 
                            lower = quantile(trend, probs = 0.025, na.rm = TRUE)))
}

ggplot(data = df, aes(x = t, y=mtrend)) +
  geom_ribbon(aes(ymin = lower, ymax = upper), fill = "orange", alpha = 0.5) + 
  geom_line() + 
  geom_line(aes(y = med), linetype = "dashed") +
  geom_hline(yintercept = 0) +
  scale_x_continuous(breaks = seq(2, 24, by = 2)) + 
  scale_y_continuous(breaks = seq(-0.5, 2.5, by = 0.25)) + 
  ylab("log Trend") + 
  xlab("Lag")
ggsave(file = "results/trend_Comb.png")
write_csv(df, file = "results/trend_Comb.csv")
```

## Results summary

Posterior mean population size over the last 20 years for Triangle survey only, (excluding 2020), 18 years for ACP survey only (excluding 2020 and 2021), and 20 years for the combined Triangle and ACP survey data are shown in @tlb-sum. 

```{r}
#| label: tbl-sum
#| tbl-cap: Posterior distributions for the 20 year (Triangle and Combined surveys) or 18 year (ACP) mean population size of Steller's Eider. Statistics are the mean, standard deviation (SD), median, upper 97.5 percentile (Upper), and lower 2.5 percentile (Lower) of the posterior 20- or 18-year mean population size. 

post <- readRDS(file = "results/ABR_post.RDS")
post <- post[,-c(1:5)] |>
  rowMeans()
df <- data.frame(Survey = "Triangle", 
                 Mean = mean(post), 
                 SD = sd(post),
                 Median = quantile(post, probs = 0.5), 
                 Upper = quantile(post, probs = 0.975), 
                 Lower = quantile(post, probs = 0.025))
post <- readRDS(file = "results/ACP_post.RDS") |>
  rowMeans()
df <- rbind(df, data.frame(Survey = "ACP", 
                           Mean = mean(post), 
                           SD = sd(post),
                           Median = quantile(post, probs = 0.5), 
                           Upper = quantile(post, probs = 0.975), 
                           Lower = quantile(post, probs = 0.025)))
post <- readRDS(file = "results/Comb_post.RDS")
post <- post[,-c(1:5)] |>
  rowMeans()
df <- rbind(df, data.frame(Survey = "Combined", 
                           Mean = mean(post), 
                           SD = sd(post),
                           Median = quantile(post, probs = 0.5), 
                           Upper = quantile(post, probs = 0.975), 
                           Lower = quantile(post, probs = 0.025))) 
kableExtra::kable(df, row.names = FALSE, digits = 1)
```

## Discussion



## References

::: {#refs}
:::
